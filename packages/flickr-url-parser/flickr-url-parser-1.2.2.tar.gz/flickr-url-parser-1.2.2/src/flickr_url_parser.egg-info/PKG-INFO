Metadata-Version: 2.1
Name: flickr-url-parser
Version: 1.2.2
Summary: Enter a Flickr URL, and find out what sort of URL it is (single photo, album, gallery, etc.)
Home-page: https://github.com/Flickr-Foundation/flickr-url-parser
Author: Flickr Foundation
Author-email: hello@flickr.org
License: UNKNOWN
Project-URL: Homepage, https://github.com/Flickr-Foundation/flickr-url-parser
Project-URL: Changes, https://github.com/Flickr-Foundation/flickr-url-parser/blob/main/CHANGELOG.md
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: Apache Software License
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE-APACHE
License-File: LICENSE-MIT

This is a library for parsing Flickr URLs.
You enter a Flickr URL, and it tells you what sort of URL it is.

Examples:

```console
$ flickr_url_parser "https://www.flickr.com/photos/sdasmarchives/50567413447"
{"type": "single_photo", "photo_id": "50567413447"}

$ flickr_url_parser "https://www.flickr.com/photos/aljazeeraenglish/albums/72157626164453131"
{"type": "album", "user_url": "https://www.flickr.com/photos/aljazeeraenglish", "album_id": "72157626164453131"}

$ flickr_url_parser "https://www.flickr.com/people/blueminds/"
{"type": "user", "user_url": "https://www.flickr.com/photos/blueminds"}
```

This was extracted as a standalone bit of functionality from [Flinumeratr], a toy that shows you a list of photos that can be viewed at a Flickr URL.

[Flinumeratr]: https://github.com/flickr-foundation/flinumeratr

## Usage

There are two ways to use flickr_url_parser:

1.  **As a command-line tool.**
    Run `flickr_url_parser`, passing the Flickr URL as a single argument:
    
    ```console
    $ flickr_url_parser "https://www.flickr.com/photos/sdasmarchives/50567413447"
    {"type": "single_photo", "photo_id": "50567413447"}
    ```
    
    The result will be printed as a JSON object.
    
    To see more information about the possible return values, run `flickr_url_parser --help`.

2.  **As a Python library.**
    Import the function `parse_flickr_url` and pass the Flickr URL as a single argument:

    ```pycon
    >>> from flickr_url_parser import parse_flickr_url

    >>> parse_flickr_url("https://www.flickr.com/photos/sdasmarchives/50567413447")
    {"type": "single_photo", "photo_id": "50567413447"}
    ```
    
    To see more information about the possible return values, use the [`help` function](https://docs.python.org/3/library/functions.html#help):
    
    ```pycon
    >>> help(parse_flickr_url)
    ```

Note that just because a URL can be parsed does not mean it can be *resolved* to a photo and/or photos.
The only way to know if there are photos behind the URL is to (1) try to fetch the URL or (2) use the output from the parser to ask the Flickr API for photos.

