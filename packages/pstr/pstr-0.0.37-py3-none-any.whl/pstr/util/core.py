# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/05_util/01_core.ipynb.

# %% auto 0
__all__ = ['toprivate', 'tomangled', 'tosunder', 'todunder', 'getcard', 'iscard', 'is1char']

# %% ../../nbs/05_util/01_core.ipynb 4
#| export

# %% ../../nbs/05_util/01_core.ipynb 5
from nchr import U1, U2
from chck import isprivate, ismangled, issunder, isdunder

# %% ../../nbs/05_util/01_core.ipynb 6
def toprivate(s: str) -> str:
    return f'{U1}{s}' if not isprivate(s) else s

def tomangled(s: str) -> str:
    return f'{U2}{s}' if not ismangled(s) else s

def tosunder(s: str) -> str:
    return f'{U1}{s}{U1}' if not issunder(s) else s

def todunder(s: str) -> str:
    return f'{U2}{s}{U2}' if not isdunder(s) else s

# %% ../../nbs/05_util/01_core.ipynb 7
def getcard(s: str) -> int:
    '''Returns the cardinality of the set of characters for the string.'''
    return len(set(s))

def iscard(s: str, n: int = 1) -> bool:
    '''Checks if a string is composed of a set of `n` characters.'''
    return getcard(s) == n

def is1char(s: str) -> bool:
    '''Checks if a string is composed of a single unique character.'''
    return iscard(s, 1)
