Split and join modules
========================

Introduction
--------------

The purpose of these scripts is to give some help with working with
(viewing and editing) modules generated by ``generateDS``,
especially when those modules turn out to be very large.

This facility works as follows: (1) Use ``gds_split_one_to_many.py``
to split a module generated by ``generateDS``.  (2) Later, if you have
modified any of the split files, use ``gds_join_many_to_one.py`` to
join them back together into a single module that you can execute.

The rational for re-joining the smaller modules together rather than
running the smaller modules themselves is that I could not come up
with a way to avoid circular imports among the split modules, which
Python does not allow.


*Important* -- You will need to get version 2.43.1 or later of
`generateDS` from https://sourceforge.net/ or https://pypi.org/
in order to use this capability.  Also, these scripts are only in
the repo at SourceForge.net and are *not* in the package at PyPI.


How to use it
---------------

Here is a example of running it:

    #
    # generate a module.
    #
    $ ./generateDS.py -f -o tmp01.py NeuroML2/Schemas/NeuroML2/NeuroML_v2.2.xsd
    #
    # split the single module into many smaller ones.
    #
    $ ./gds_split_one_to_many.py --verbose --force --prefix=neuroml tmp01.py Tmp01
    #
    # and if you have modified the split files,
    # join them back together into a single module that can be run.
    #
    $ ./gds_split_one_to_many.py --verbose --force --prefix=neuroml tmp01.py Tmp01


A typical workflow
--------------------

So, your typical workflow might be:

1. Generate a module from an XML schema with `generateDS.py`.

2. Split the module into separate files with
   `gds_split_one_to_many.py`.

3. View and possibly edit/modify the split files with your text
   editor.

4. *If* you modified any of the split files, then join/merge them
   back into a single file with `gds_join_many_to_one.py`.

5. Run the merged file, or the original generated module if there
   were no modifications made to the split files.


Guidance and cautions
-----------------------

A bit of guidance about the split files:

- `{prefix}header.py` contains header stuff from the top of the
  original generated module.

- `{prefix}enums.py` contains enum classes generated from some
  `simpleType` definitions.

- `{prefix}_xxx.py` files contain code generated from `complexType`
  definitions, one for each definition (element type).

- `{prefix}footer.py` the stuff from the bottom of the generated
  module.

Do try to be careful not to modify any lines that match the
following patterns (and maybe the line above and below them) in the
module generated by `generateDS.py` or the split files.  Those lines
are needed to trigger events in `gds_split_one_to_many.py`:

- "^# Start enum classes$"
- "^# Start data representation classes$"
- "^# End data representation classes.$"
- "^class *(\w*)\((\w*)\):(.*)$"
- "^# end class \w*$"
- "# Namespace prefix definition table \(and other attributes, too\)"

