# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_util.ipynb.

# %% auto 0
__all__ = ['renone', 'filtdict']

# %% ../nbs/01_util.ipynb 6
from itertools import zip_longest

# %% ../nbs/01_util.ipynb 8
from typing import Iterable

# %% ../nbs/01_util.ipynb 10
#| export


# %% ../nbs/01_util.ipynb 12
from nchr import U1
from chck import notnone, istuple, isrange, isdictiter

# %% ../nbs/01_util.ipynb 14
#| export


# %% ../nbs/01_util.ipynb 16
def renone(v, retnone: bool = True): 
    return None if retnone else v

def filtdict(dct: dict, keys: list = None) -> dict:
    '''Return a dict with only the keys in `keys`'''
    return {k: v for k in (keys or dct.keys()) if (v := dct.get(k))}

# def dostar(v: str) -> bool:
#     return (not v.startswith(U1) or v.isupper())
