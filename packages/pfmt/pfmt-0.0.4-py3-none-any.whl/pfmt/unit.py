# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/04_unit.ipynb.

# %% auto 0
__all__ = ['FactRepr', 'fmtunit']

# %% ../nbs/04_unit.ipynb 4
from typing import Union, Optional, TypeAlias

# %% ../nbs/04_unit.ipynb 5
from .word import fmtword
from .numb import fmtnumb

from nlit import (ABRV, NAME, SYMB, ONE)

# %% ../nbs/04_unit.ipynb 7
FactRepr: TypeAlias = Union[ABRV, NAME, SYMB]

# %% ../nbs/04_unit.ipynb 8
def fmtunit(
    org: float,                   # float(unit(...))
    flt: Optional[float] = None,  # float(unit(...).flt)
    unt: Optional['unit'] = None, # unit(...) # instance of a unit class
    fct: Optional['fact'] = None,    
    shownumb: Optional[bool] = True,
    abrvunit: Optional[bool] = False,
    factrepr: Optional[FactRepr] = ABRV,
    ndig: Optional[int] = 3, 
    unitname: Optional[str] = None,
    factname: Optional[str] = None,
) -> str:
    '''
    Formats a given number to its representation in units with factors.

    Parameters
    ----------
    org : float
        The number as converted to the desired factor.
    flt : Optional[float], default=None
        The original number prior to factor conversion.
    unt : Optional[unit], default=None
        An instance of a unit class representing the base unit.
    fct : Optional[fact], default=None
        The factor class for the desired unit representation.
    shownumb : Optional[bool], default=True
        Whether to show the original number (`flt`) or the scaled number (`org`).
    abrvunit : Optional[bool], default=False
        Whether to show the abbreviation or the full name of the unit.
    factrepr : Optional[str], default='abrv'
        Representation of factor class to use, options include 'name', 'abrv', and 'symb'.
    ndig : Optional[int], default=3
        Number of significant digits to represent the number.
    unitname : Optional[str], default=None
        Override for the unit's name.
    factname : Optional[str], default=None
        Override for the factor's name or representation.

    Returns
    -------
    str
        Formatted string representation of the number in units with factors.

    Examples
    --------
    >>> fmtunit(1000.0, flt=1, unt=second, fct=kilo, factrepr='name')
    '1 Kilosecond'
    >>> fmtunit(1000.0, flt=1, unt=second, fct=kilo, factrepr='abrv')
    '1 Ksecond'
    >>> fmtunit(1000.0, flt=1, unt=second, fct=kilo, factrepr='symb')
    '1 KS'
    '''
    
    fnum = float(org)
    
    fnum = float(org)
    if flt is None: return str(fnum)
    if ndig is None: ndig = getattr(unt, 'ndig', 3)
    
    if factrepr is None: factrepr = getattr(fct, 'factrepr', ABRV)
    if shownumb is None: shownumb = getattr(unt, 'shownumb', True)

    num = flt if shownumb else org
    nstr = fmtnumb(num, ndig)
    uname = fmtword(unitname, num)

    if unitname is None: unitname = (getattr(unt, NAME, None) or '')
    if abrvunit is None: abrvunit = getattr(unt, ABRV, False)
    if abrvunit:
        uname = uname[0]
        factrepr = SYMB
    

    if factname is None: factname = (getattr(fct, factrepr, '') or '')

    fname = factname
    if fname.casefold() == ONE: fname = ''    
    if shownumb == False: fname = ''
    match factrepr:
        case 'name': return f'{nstr} {fname}{uname}'
        case 'abrv': return f'{nstr} {fname}{uname}'
        case 'symb': return f'{nstr} {fname}{uname[0]}'
        case _: return str(org)
