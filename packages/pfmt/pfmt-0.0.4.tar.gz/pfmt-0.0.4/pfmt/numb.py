# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_numb.ipynb.

# %% auto 0
__all__ = ['fmtnumb', 'lpad0', 'fmt0str']

# %% ../nbs/01_numb.ipynb 4
from numbers import Number

# %% ../nbs/01_numb.ipynb 5
from nchr import DOT

# %% ../nbs/01_numb.ipynb 7
def fmtnumb(n: Number, digits: int = 3) -> str:
    '''Convert a number to a string representation with specified significant digits.

    Parameters
    ----------
    n : Number
        Number to be converted to string.
    digits : int, default=3
        Number of significant digits.

    Returns
    -------
    str
        String representation of the number with the specified significant digits.

    Notes
    -----
    The conversion can also be achieved using the string format mini-language:
    `r = f'{n:.{digits}f}'`.
    '''
    r = str(round(n, digits))
    i, _, d = r.partition(DOT)
    if set(d) != set('0'): return str(r)
    return i if _ == '' else f'{i}.0'

# %% ../nbs/01_numb.ipynb 8
def lpad0(s, n: int = 2) -> str:
    '''Left pad a string with zeros to a specified length.'''
    return str.rjust(str(s), n, str(0))

def fmt0str(s, n: int = 2) -> str:
    '''Left pad a string with zeros to a specified length.
    
    See Also
    --------
    lpad0 : Alias for `lpad0`.    
    '''
    return lpad0(s, n)
