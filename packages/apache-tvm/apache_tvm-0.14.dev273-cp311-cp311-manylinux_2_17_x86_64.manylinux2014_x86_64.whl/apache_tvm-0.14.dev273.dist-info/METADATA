Metadata-Version: 2.1
Name: apache-tvm
Version: 0.14.dev273
Summary: Tensor learning compiler binary distribution
Home-page: https://tlcpack.ai
Download-URL: https://tlcpack.ai
Author: Apache TVM
License: Apache
Keywords: machine learning
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Description-Content-Type: text/markdown
Requires-Dist: attrs
Requires-Dist: cloudpickle
Requires-Dist: decorator
Requires-Dist: ml-dtypes
Requires-Dist: numpy
Requires-Dist: psutil
Requires-Dist: scipy
Requires-Dist: tornado
Requires-Dist: typing-extensions
Provides-Extra: all-prod
Requires-Dist: attrs ; extra == 'all-prod'
Requires-Dist: cloudpickle ; extra == 'all-prod'
Requires-Dist: coremltools ; extra == 'all-prod'
Requires-Dist: decorator ; extra == 'all-prod'
Requires-Dist: ethos-u-vela (==3.8.0) ; extra == 'all-prod'
Requires-Dist: future ; extra == 'all-prod'
Requires-Dist: h5py (==2.10.0) ; extra == 'all-prod'
Requires-Dist: ml-dtypes ; extra == 'all-prod'
Requires-Dist: numpy ; extra == 'all-prod'
Requires-Dist: onnx ; extra == 'all-prod'
Requires-Dist: onnxoptimizer ; extra == 'all-prod'
Requires-Dist: onnxruntime ; extra == 'all-prod'
Requires-Dist: opencv-python ; extra == 'all-prod'
Requires-Dist: paddlepaddle ; extra == 'all-prod'
Requires-Dist: progressbar ; extra == 'all-prod'
Requires-Dist: protobuf ; extra == 'all-prod'
Requires-Dist: psutil ; extra == 'all-prod'
Requires-Dist: scikit-image ; extra == 'all-prod'
Requires-Dist: scipy ; extra == 'all-prod'
Requires-Dist: six ; extra == 'all-prod'
Requires-Dist: tensorflow ; extra == 'all-prod'
Requires-Dist: tensorflow-estimator ; extra == 'all-prod'
Requires-Dist: tflite ; extra == 'all-prod'
Requires-Dist: torch ; extra == 'all-prod'
Requires-Dist: torchvision ; extra == 'all-prod'
Requires-Dist: tornado ; extra == 'all-prod'
Requires-Dist: typing-extensions ; extra == 'all-prod'
Requires-Dist: xgboost (>=1.1.0) ; extra == 'all-prod'
Provides-Extra: dev
Requires-Dist: astroid ; extra == 'dev'
Requires-Dist: autodocsumm ; extra == 'dev'
Requires-Dist: black (==20.8b1) ; extra == 'dev'
Requires-Dist: commonmark (>=0.7.3) ; extra == 'dev'
Requires-Dist: cpplint ; extra == 'dev'
Requires-Dist: docutils (<0.17) ; extra == 'dev'
Requires-Dist: image ; extra == 'dev'
Requires-Dist: matplotlib ; extra == 'dev'
Requires-Dist: pillow ; extra == 'dev'
Requires-Dist: pylint ; extra == 'dev'
Requires-Dist: sphinx ; extra == 'dev'
Requires-Dist: sphinx-autodoc-annotation ; extra == 'dev'
Requires-Dist: sphinx-gallery ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme ; extra == 'dev'
Requires-Dist: types-psutil ; extra == 'dev'
Provides-Extra: ethosu
Requires-Dist: ethos-u-vela (==3.8.0) ; extra == 'ethosu'
Provides-Extra: importer-caffe
Requires-Dist: numpy ; extra == 'importer-caffe'
Requires-Dist: protobuf ; extra == 'importer-caffe'
Requires-Dist: scikit-image ; extra == 'importer-caffe'
Requires-Dist: six ; extra == 'importer-caffe'
Provides-Extra: importer-caffe2
Requires-Dist: future ; extra == 'importer-caffe2'
Requires-Dist: torch ; extra == 'importer-caffe2'
Provides-Extra: importer-coreml
Requires-Dist: coremltools ; extra == 'importer-coreml'
Provides-Extra: importer-darknet
Requires-Dist: opencv-python ; extra == 'importer-darknet'
Provides-Extra: importer-keras
Requires-Dist: tensorflow ; extra == 'importer-keras'
Requires-Dist: tensorflow-estimator ; extra == 'importer-keras'
Provides-Extra: importer-onnx
Requires-Dist: future ; extra == 'importer-onnx'
Requires-Dist: onnx ; extra == 'importer-onnx'
Requires-Dist: onnxoptimizer ; extra == 'importer-onnx'
Requires-Dist: onnxruntime ; extra == 'importer-onnx'
Requires-Dist: torch ; extra == 'importer-onnx'
Requires-Dist: torchvision ; extra == 'importer-onnx'
Provides-Extra: importer-paddle
Requires-Dist: paddlepaddle ; extra == 'importer-paddle'
Provides-Extra: importer-pytorch
Requires-Dist: future ; extra == 'importer-pytorch'
Requires-Dist: torch ; extra == 'importer-pytorch'
Requires-Dist: torchvision ; extra == 'importer-pytorch'
Provides-Extra: importer-tensorflow
Requires-Dist: tensorflow ; extra == 'importer-tensorflow'
Requires-Dist: tensorflow-estimator ; extra == 'importer-tensorflow'
Provides-Extra: importer-tflite
Requires-Dist: tensorflow ; extra == 'importer-tflite'
Requires-Dist: tensorflow-estimator ; extra == 'importer-tflite'
Requires-Dist: tflite ; extra == 'importer-tflite'
Provides-Extra: tvmc
Requires-Dist: ethos-u-vela (==3.8.0) ; extra == 'tvmc'
Requires-Dist: future ; extra == 'tvmc'
Requires-Dist: onnx ; extra == 'tvmc'
Requires-Dist: onnxoptimizer ; extra == 'tvmc'
Requires-Dist: onnxruntime ; extra == 'tvmc'
Requires-Dist: paddlepaddle ; extra == 'tvmc'
Requires-Dist: tensorflow ; extra == 'tvmc'
Requires-Dist: tflite ; extra == 'tvmc'
Requires-Dist: torch ; extra == 'tvmc'
Requires-Dist: torchvision ; extra == 'tvmc'
Requires-Dist: xgboost (>=1.1.0) ; extra == 'tvmc'
Provides-Extra: vitis-ai
Requires-Dist: h5py (==2.10.0) ; extra == 'vitis-ai'
Requires-Dist: progressbar ; extra == 'vitis-ai'
Provides-Extra: xgboost
Requires-Dist: future ; extra == 'xgboost'
Requires-Dist: torch ; extra == 'xgboost'
Requires-Dist: xgboost (>=1.1.0) ; extra == 'xgboost'

<!--- Licensed to the Apache Software Foundation (ASF) under one -->
<!--- or more contributor license agreements.  See the NOTICE file -->
<!--- distributed with this work for additional information -->
<!--- regarding copyright ownership.  The ASF licenses this file -->
<!--- to you under the Apache License, Version 2.0 (the -->
<!--- "License"); you may not use this file except in compliance -->
<!--- with the License.  You may obtain a copy of the License at -->

<!---   http://www.apache.org/licenses/LICENSE-2.0 -->

<!--- Unless required by applicable law or agreed to in writing, -->
<!--- software distributed under the License is distributed on an -->
<!--- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY -->
<!--- KIND, either express or implied.  See the License for the -->
<!--- specific language governing permissions and limitations -->
<!--- under the License. -->

<img src=https://raw.githubusercontent.com/apache/tvm-site/main/images/logo/tvm-logo-small.png width=128/> Open Deep Learning Compiler Stack
==============================================
[Documentation](https://tvm.apache.org/docs) |
[Contributors](CONTRIBUTORS.md) |
[Community](https://tvm.apache.org/community) |
[Release Notes](NEWS.md)

[![Build Status](https://ci.tlcpack.ai/buildStatus/icon?job=tvm/main)](https://ci.tlcpack.ai/job/tvm/job/main/)
[![WinMacBuild](https://github.com/apache/tvm/workflows/WinMacBuild/badge.svg)](https://github.com/apache/tvm/actions?query=workflow%3AWinMacBuild)

Apache TVM is a compiler stack for deep learning systems. It is designed to close the gap between the
productivity-focused deep learning frameworks, and the performance- and efficiency-focused hardware backends.
TVM works with deep learning frameworks to provide end to end compilation to different backends.

License
-------
TVM is licensed under the [Apache-2.0](LICENSE) license.

Getting Started
---------------
Check out the [TVM Documentation](https://tvm.apache.org/docs/) site for installation instructions, tutorials, examples, and more.
The [Getting Started with TVM](https://tvm.apache.org/docs/tutorial/introduction.html) tutorial is a great
place to start.

Contribute to TVM
-----------------
TVM adopts apache committer model, we aim to create an open source project that is maintained and owned by the community.
Check out the [Contributor Guide](https://tvm.apache.org/docs/contribute/).

Acknowledgement
---------------
We learned a lot from the following projects when building TVM.
- [Halide](https://github.com/halide/Halide): Part of TVM's TIR and arithmetic simplification module
  originates from Halide. We also learned and adapted some part of lowering pipeline from Halide.
- [Loopy](https://github.com/inducer/loopy): use of integer set analysis and its loop transformation primitives.
- [Theano](https://github.com/Theano/Theano): the design inspiration of symbolic scan operator for recurrence.
