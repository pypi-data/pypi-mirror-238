Metadata-Version: 2.1
Name: fastfeatureflag
Version: 0.4.0
Summary: light-weight feature flags
Author: GreNait
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: anybadge (>=1.14.0,<2.0.0)
Requires-Dist: anyio (>=3.7.1,<4.0.0)
Requires-Dist: behave (>=1.2.6,<2.0.0)
Requires-Dist: black (>=23.7.0,<24.0.0)
Requires-Dist: bpython (>=0.24,<0.25)
Requires-Dist: commitizen (>=3.6.0,<4.0.0)
Requires-Dist: dagger-io (>=0.8.1,<0.9.0)
Requires-Dist: ipytest (>=0.13.3,<0.14.0)
Requires-Dist: jupyter (>=1.0.0,<2.0.0)
Requires-Dist: mkdocs (>=1.5.2,<2.0.0)
Requires-Dist: mkdocs-autorefs (>=0.5.0,<0.6.0)
Requires-Dist: mkdocs-git-revision-date-localized-plugin (>=1.2.0,<2.0.0)
Requires-Dist: mkdocs-jupyter (>=0.24.6,<0.25.0)
Requires-Dist: mkdocs-material (>=9.1.21,<10.0.0)
Requires-Dist: mkdocstrings[python] (>=0.22.0,<0.23.0)
Requires-Dist: mypy (>=1.4.1,<2.0.0)
Requires-Dist: pre-commit (>=3.3.3,<4.0.0)
Requires-Dist: pylint (>=2.17.5,<3.0.0)
Requires-Dist: pymdown-extensions (>=10.1,<11.0)
Requires-Dist: pytest (>=7.4.0,<8.0.0)
Requires-Dist: pytest-asyncio (>=0.21.1,<0.22.0)
Requires-Dist: pytest-cov (>=4.1.0,<5.0.0)
Requires-Dist: pytest-watch (>=4.2.0,<5.0.0)
Requires-Dist: python-dotenv (>=1.0.0,<2.0.0)
Requires-Dist: toml (>=0.10.2,<0.11.0)
Requires-Dist: twine (>=4.0.2,<5.0.0)
Requires-Dist: types-toml (>=0.10.8.7,<0.11.0.0)
Description-Content-Type: text/markdown

FastFeatureFlag is a lightweight tool to generate and use feature flags. Build in python for python. The key components are:

- easy to add feature flag
- easily activate/deactivate features
- naming/grouping flags
- define custom response for flagged features
- use environment variables as your on/off switch
- manage feature flags with a simple toml file

# :tools: Installation
---

```console
pip install fastfeatureflag
```

```console
poetry add fastfeatureflag
```

## :white_flag: `flag` away ...
---

!!! tip "take a look at the decorator `feature_flag()` - that is all you need."

```python title="fast feature flags"
from fastfeatureflag.feature_flag import feature_flag

@feature_flag("off")
def broken_feature():
    return "I am broken"

broken_feature()
NotImplementedError: Feature not implemented
```

