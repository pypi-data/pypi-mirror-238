name: pypi

on:
  release:
    types: [released]
  workflow_dispatch:

jobs:
  # deploy mac
  deploy--windows-mac:
    name: "Deploy on windows and mac"
    runs-on: ${{ matrix.platform }}

    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest]  # Specify the operating systems
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }} for ${{ matrix.platform }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine pybind11 scikit-build

    - name: Pull & update submodules recursively
      run: |
        git submodule update --init --recursive
        git submodule update --recursive --remote

    - name: Build wheel for ${{ matrix.platform }} - Python ${{ matrix.python-version }}
      run: |
        python setup.py bdist_wheel

    # if this is a release, upload to PyPI
    - name: Publish release to pypi
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*.whl


    # if this is a manual dispatch, upload to TestPyPI
    - name: Publish release to (test) pypi
      if: github.event_name == 'workflow_dispatch'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        twine upload -r testpypi dist/*.whl
    
  # create sdist for linux, we dont create wheels for now
  deploy-sdist:  
    name: "Build dist"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Pull & update submodules recursively
      run: |
        git submodule update --init --recursive
        git submodule update --recursive --remote

    - name: Set up Python 
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine pybind11 scikit-build 

    - name: Build wheels
      run: python setup.py sdist

    # if this is a release, upload to PyPI
    - name: Publish release to pypi
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*.tar.gz

    # if this is a manual dispatch, upload to TestPyPI
    - name: Publish release to (test) pypi
      if: github.event_name == 'workflow_dispatch'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        twine upload -r testpypi dist/*.tar.gz
    