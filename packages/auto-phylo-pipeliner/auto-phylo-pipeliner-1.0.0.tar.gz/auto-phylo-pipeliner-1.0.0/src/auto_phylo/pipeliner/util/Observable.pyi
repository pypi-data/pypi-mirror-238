from typing import Callable, Generic, TypeVar

E = TypeVar('E')
Self = TypeVar('Self', bound='Observable')

class Observable(Generic[E]):
    def __init__(self) -> None: ...
    def add_callback(self, callback: Callable[[Self, E], None]) -> None: ...
    def has_callback(self, callback: Callable[[Self, E], None]) -> bool: ...
    def remove_callback(self, callback: Callable[[Self, E], None]) -> None: ...
    def remove_all_callbacks(self) -> None: ...
