from typing import Dict, List, Union

class Command:
    def __init__(self, tool: str, name: str, url: str, supports_special: bool, params: Dict[str, Dict[str, Union[str, bool]]]) -> None: ...
    @property
    def tool(self) -> str: ...
    @property
    def name(self) -> str: ...
    @property
    def url(self) -> str: ...
    @property
    def supports_special(self) -> bool: ...
    @property
    def params(self) -> Dict[str, str]: ...
    def has_param(self, param: str) -> bool: ...
    def has_params(self) -> bool: ...
    def list_param_names(self) -> List[str]: ...
    def get_default_param_value(self, param: str) -> str: ...
    def does_param_allow_empty(self, param: str) -> bool: ...
    def __copy__(self) -> Command: ...
    def __deepcopy__(self, memodict=...) -> Command: ...
