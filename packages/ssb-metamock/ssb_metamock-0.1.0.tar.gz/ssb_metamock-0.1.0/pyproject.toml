[tool.poetry]
name = "ssb-metamock"
version = "0.1.0"
description = "Generate synthetic data from datadoc metadata"
authors = ["Amund LÃ¥gbu <mgb@ssb.no>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/statisticsnorway/metamock"
repository = "https://github.com/statisticsnorway/metamock"
documentation = "https://statisticsnorway.github.io/metamock"
classifiers = ["Development Status :: 2 - Pre-Alpha"]
packages = [{ include = "metamock", from = "src" }]

[tool.poetry.urls]
Changelog = "https://github.com/statisticsnorway/metamock/releases"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
ssb-datadoc-model = ">=2.0.1"
pydantic = "<2"
faker = ">=19.3.1"
ssb-klass-python = ">=0.0.6"
numpy = ">=1.26.0"
requests = ">=2.31.0"
pandas = ">=1.5.3"
defusedxml = "^0.7.1"
xdg-base-dirs = "^6.0.1"

[tool.poetry.group.dev.dependencies]
pygments = ">=2.10.0"
black = { extras = ["jupyter"], version = ">=23.1.0" }
coverage = { extras = ["toml"], version = ">=6.2" }
darglint = ">=1.8.1"
furo = ">=2021.11.12"
mypy = ">=0.930"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
ruff = ">=0.0.284"
pytest = ">=6.2.5"
safety = ">=1.10.3"
sphinx = ">=6.2.1"
sphinx-autobuild = ">=2021.3.14"
sphinx-autodoc-typehints = ">=1.24.0"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = { extras = ["colors"], version = ">=0.15.10" }
myst-parser = { version = ">=0.16.1" }
ipykernel = ">=6.0.0"
deptry = ">=0.12.0"
pyarrow = "^13.0.0"
mypy-extensions = "^1.0.0"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.poetry.scripts]
metamock = "metamock.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests"]

[tool.coverage.run]
branch = true
source = ["metamock"]

[tool.coverage.report]
show_missing = true
fail_under = 80

[tool.ruff]
force-exclude = true # Apply excludes to pre-commit
extend-exclude = [
    "__pycache__",
    "old",
    ".ipynb_checkpoints",
    "noxfile.py",
    "docs/conf.py",
]
ignore = ["A003", "ANN101", "B008", "E501", "D211", "D213", "D417", "FIX002"]

# Aggressively activate all rules.
# These may be customized as desired: https://beta.ruff.rs/docs/rules/
select = ["ALL"]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod", "validator", "root_validator"]

[tool.ruff.per-file-ignores]
"*/__init__.py" = ["F401"]
"**/tests/*" = [
    # asserts are encouraged in pytest
    "S101",
    # return annotations don't add value for test functions
    "ANN201",
    # docstrings are overkill for test functions
    "D103",
    "D100",
    # booleans don't cause confusion in test functions
    "FBT001",
]

[tool.mypy]
strict = false
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = ['klass.*', 'datadoc_model.*', 'defusedxml.*', 'dapla.*', 'parquet.*', 'pyarrow.*']
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
