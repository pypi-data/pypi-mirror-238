[project]
name = "mypy-to-codeclimate"
version = "0.0.1"
description = "Standalone tool to convert a mypy output to CodeQuality JSON, for Gitlab or other CIs."
authors = [
    { name = "Gabriel Dugny", email = "mypy-to-codeclimate@dugny.me" },
]
dependencies = []
requires-python = ">=3.8"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.license]
text = "MIT"

[project.urls]
Repository = "https://github.com/GabDug/mypy-to-codeclimate.git"

[project.scripts]
mypy-to-codeclimate = "mypy_to_codeclimate:main"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm]
plugins = [
    "sync-pre-commit-lock",
]

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.1.3",
    "black>=23.10.1",
    "mypy>=1.6.1",
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
]

[tool.pdm.scripts]
test = "pytest"
lint = "pre-commit run --all-files"

[tool.pdm.scripts.fmt]
cmd = "black ."
help = "Run black formatter"

[tool.pdm.scripts.test-cov]
cmd = "pytest --junitxml=junit/test-results.xml --cov --cov-report=xml --cov-report=html --cov-report=term-missing"
help = "Run tests with coverage"

[tool.pdm.scripts.lint-mypy]
cmd = "mypy src"
help = "Run mypy type checker"

[tool.pdm.scripts.lint-ruff]
cmd = "ruff ."
help = "Run ruff linter"

[tool.ruff.pydocstyle]
convention = "google"
