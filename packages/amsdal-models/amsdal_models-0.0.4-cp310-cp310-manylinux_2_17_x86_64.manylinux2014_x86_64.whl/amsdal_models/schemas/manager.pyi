from amsdal_models.errors import AmsdalValidationError as AmsdalValidationError
from amsdal_models.schemas.data_models.schema import ObjectSchema as ObjectSchema
from amsdal_models.schemas.data_models.schemas_directory import SchemasDirectory as SchemasDirectory
from amsdal_models.schemas.extenders.custom_code_extender import CustomCodeExtender as CustomCodeExtender
from amsdal_models.schemas.extenders.options_extender import OptionsExtender as OptionsExtender
from amsdal_models.schemas.loaders.cli_custom_code_loader import CliCustomCodeLoader as CliCustomCodeLoader
from amsdal_models.schemas.loaders.cli_loader import CliConfigLoader as CliConfigLoader
from amsdal_models.schemas.loaders.cli_options_loader import CliOptionsLoader as CliOptionsLoader
from amsdal_models.schemas.mixins.check_dependencies_mixin import CheckDependenciesMixin as CheckDependenciesMixin
from amsdal_models.schemas.mixins.enrich_schemas_mixin import EnrichSchemasMixin as EnrichSchemasMixin
from amsdal_models.schemas.mixins.verify_schemas_mixin import VerifySchemasMixin as VerifySchemasMixin
from pathlib import Path

class BuildSchemasManager(EnrichSchemasMixin, VerifySchemasMixin, CheckDependenciesMixin):
    def __init__(self, schemas_directories: list[SchemasDirectory]) -> None: ...
    @property
    def type_schemas(self) -> list[ObjectSchema]: ...
    @property
    def core_schemas(self) -> list[ObjectSchema]: ...
    @property
    def contrib_schemas(self) -> list[ObjectSchema]: ...
    @property
    def user_schemas(self) -> list[ObjectSchema]: ...
    def verify(self) -> None: ...
    def dump_schemas(self, target_dir: Path) -> None: ...

class SchemaManagerHandler:
    def __init__(self, schemas_directory: Path) -> None: ...
    @property
    def type_schemas(self) -> list[ObjectSchema]: ...
    @property
    def core_schemas(self) -> list[ObjectSchema]: ...
    @property
    def contrib_schemas(self) -> list[ObjectSchema]: ...
    @property
    def user_schemas(self) -> list[ObjectSchema]: ...
    @property
    def all_schemas(self) -> list[ObjectSchema]: ...
