"use strict";(self.webpackChunk_unfolded_jupyter_map_sdk=self.webpackChunk_unfolded_jupyter_map_sdk||[]).push([[4],{4:function(e,n,t){var o=this&&this.__awaiter||function(e,n,t,o){return new(t||(t=Promise))((function(s,r){function i(e){try{d(o.next(e))}catch(e){r(e)}}function a(e){try{d(o.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?s(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,a)}d((o=o.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.unfoldedRendererFactory=void 0;const s=t(832),r=t(258),i="application/geo+json",a="text/csv",d=[i,a];class u extends s.Widget{constructor(e){super(),this.addClass("unfolded-rendermime"),this.options=e}renderModel(e){var n,t;return o(this,void 0,void 0,(function*(){if(this.hasMapElement())return;const o=yield(0,r.createMap)({container:this.node}),s=e.data[this.options.mimeType];o.addDataset({label:(null===(t=null===(n=this.options)||void 0===n?void 0:n.resolver)||void 0===t?void 0:t.path)||"Dataset",data:s})}))}hasMapElement(){return null!==this.node.querySelector("iframe#unfolded_iframe")}}n.unfoldedRendererFactory={safe:!0,mimeTypes:d,createRenderer:e=>new u(e)};const l=[{id:"@unfolded/jupyter-map-sdk:rendermime-plugin",rendererFactory:n.unfoldedRendererFactory,rank:0,dataType:"string",fileTypes:[{name:"geojson",mimeTypes:[i],extensions:[".geojson",".json"]},{name:"csv",mimeTypes:[a],extensions:[".csv"]}],documentWidgetFactoryOptions:{name:"Unfolded Studio",primaryFileType:"geojson",fileTypes:["geojson","json","csv"],defaultFor:["geojson"]}}];n.default=l}}]);