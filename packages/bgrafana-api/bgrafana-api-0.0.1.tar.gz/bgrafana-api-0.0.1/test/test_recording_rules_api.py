# coding: utf-8

"""
    Grafana HTTP API.

    The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.

    The version of the OpenAPI document: 0.0.1
    Contact: hello@grafana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bgrafana-api.api.recording_rules_api import RecordingRulesApi  # noqa: E501


class TestRecordingRulesApi(unittest.TestCase):
    """RecordingRulesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = RecordingRulesApi()  # noqa: E501

    def tearDown(self) -> None:
        pass

    def test_create_recording_rule(self) -> None:
        """Test case for create_recording_rule

        Create a recording rule that is then registered and started.  # noqa: E501
        """
        pass

    def test_create_recording_rule_write_target(self) -> None:
        """Test case for create_recording_rule_write_target

        Create a remote write target.  # noqa: E501
        """
        pass

    def test_delete_recording_rule(self) -> None:
        """Test case for delete_recording_rule

        Delete removes the rule from the registry and stops it.  # noqa: E501
        """
        pass

    def test_delete_recording_rule_write_target(self) -> None:
        """Test case for delete_recording_rule_write_target

        Delete the remote write target.  # noqa: E501
        """
        pass

    def test_get_recording_rule_write_target(self) -> None:
        """Test case for get_recording_rule_write_target

        Return the prometheus remote write target.  # noqa: E501
        """
        pass

    def test_list_recording_rules(self) -> None:
        """Test case for list_recording_rules

        Lists all rules in the database: active or deleted.  # noqa: E501
        """
        pass

    def test_test_create_recording_rule(self) -> None:
        """Test case for test_create_recording_rule

        Test a recording rule.  # noqa: E501
        """
        pass

    def test_update_recording_rule(self) -> None:
        """Test case for update_recording_rule

        Update the active status of a rule.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
