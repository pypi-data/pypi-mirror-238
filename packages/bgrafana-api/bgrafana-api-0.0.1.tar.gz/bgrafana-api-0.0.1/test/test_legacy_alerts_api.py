# coding: utf-8

"""
    Grafana HTTP API.

    The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.

    The version of the OpenAPI document: 0.0.1
    Contact: hello@grafana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bgrafana-api.api.legacy_alerts_api import LegacyAlertsApi  # noqa: E501


class TestLegacyAlertsApi(unittest.TestCase):
    """LegacyAlertsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = LegacyAlertsApi()  # noqa: E501

    def tearDown(self) -> None:
        pass

    def test_get_alert_by_id(self) -> None:
        """Test case for get_alert_by_id

        Get alert by ID.  # noqa: E501
        """
        pass

    def test_get_alerts(self) -> None:
        """Test case for get_alerts

        Get legacy alerts.  # noqa: E501
        """
        pass

    def test_get_dashboard_states(self) -> None:
        """Test case for get_dashboard_states

        Get alert states for a dashboard.  # noqa: E501
        """
        pass

    def test_pause_alert(self) -> None:
        """Test case for pause_alert

        Pause/unpause alert by id.  # noqa: E501
        """
        pass

    def test_test_alert(self) -> None:
        """Test case for test_alert

        Test alert.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
