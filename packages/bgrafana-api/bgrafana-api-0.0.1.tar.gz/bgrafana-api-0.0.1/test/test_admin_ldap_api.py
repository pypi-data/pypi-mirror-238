# coding: utf-8

"""
    Grafana HTTP API.

    The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.

    The version of the OpenAPI document: 0.0.1
    Contact: hello@grafana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bgrafana-api.api.admin_ldap_api import AdminLdapApi  # noqa: E501


class TestAdminLdapApi(unittest.TestCase):
    """AdminLdapApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AdminLdapApi()  # noqa: E501

    def tearDown(self) -> None:
        pass

    def test_get_ldap_status(self) -> None:
        """Test case for get_ldap_status

        Attempts to connect to all the configured LDAP servers and returns information on whenever they're available or not.  # noqa: E501
        """
        pass

    def test_get_user_from_ldap(self) -> None:
        """Test case for get_user_from_ldap

        Finds an user based on a username in LDAP. This helps illustrate how would the particular user be mapped in Grafana when synced.  # noqa: E501
        """
        pass

    def test_post_sync_user_with_ldap(self) -> None:
        """Test case for post_sync_user_with_ldap

        Enables a single Grafana user to be synchronized against LDAP.  # noqa: E501
        """
        pass

    def test_reload_ldap_cfg(self) -> None:
        """Test case for reload_ldap_cfg

        Reloads the LDAP configuration.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
