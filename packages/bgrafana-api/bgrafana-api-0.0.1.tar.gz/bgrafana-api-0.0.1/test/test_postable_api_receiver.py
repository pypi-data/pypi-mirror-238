# coding: utf-8

"""
    Grafana HTTP API.

    The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.

    The version of the OpenAPI document: 0.0.1
    Contact: hello@grafana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from bgrafana-api.models.postable_api_receiver import PostableApiReceiver  # noqa: E501

class TestPostableApiReceiver(unittest.TestCase):
    """PostableApiReceiver unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostableApiReceiver:
        """Test PostableApiReceiver
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostableApiReceiver`
        """
        model = PostableApiReceiver()  # noqa: E501
        if include_optional:
            return PostableApiReceiver(
                discord_configs = [
                    bgrafana-api.models.discord_config_configures_notifications_via_discord/.DiscordConfig configures notifications via Discord.(
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', 
                                    user = bgrafana-api.models.userinfo.Userinfo(), ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                force_query = True, 
                                fragment = '', 
                                host = '', 
                                omit_host = True, 
                                opaque = '', 
                                path = '', 
                                raw_fragment = '', 
                                raw_path = '', 
                                raw_query = '', 
                                scheme = '', ), 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        message = '', 
                        send_resolved = True, 
                        title = '', 
                        webhook_url = , )
                    ],
                email_configs = [
                    bgrafana-api.models.email_config_configures_notifications_via_mail/.EmailConfig configures notifications via mail.(
                        auth_identity = '', 
                        auth_password = '', 
                        auth_password_file = '', 
                        auth_secret = '', 
                        auth_username = '', 
                        from = '', 
                        headers = {
                            'key' : ''
                            }, 
                        hello = '', 
                        html = '', 
                        require_tls = True, 
                        send_resolved = True, 
                        smarthost = bgrafana-api.models.host_port_represents_a_"host:port"_network_address/.HostPort represents a "host:port" network address.(
                            host = '', 
                            port = '', ), 
                        text = '', 
                        tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                            ca_file = '', 
                            cert_file = '', 
                            insecure_skip_verify = True, 
                            key_file = '', 
                            max_version = 56, 
                            min_version = 56, 
                            server_name = '', ), 
                        to = '', )
                    ],
                grafana_managed_receiver_configs = [
                    bgrafana-api.models.postable_grafana_receiver.PostableGrafanaReceiver(
                        disable_resolve_message = True, 
                        name = '', 
                        secure_settings = {
                            'key' : ''
                            }, 
                        settings = bgrafana-api.models.raw_message.RawMessage(), 
                        type = '', 
                        uid = '', )
                    ],
                name = '',
                opsgenie_configs = [
                    bgrafana-api.models.ops_genie_config_configures_notifications_via_ops_genie/.OpsGenieConfig configures notifications via OpsGenie.(
                        actions = '', 
                        api_key = '', 
                        api_key_file = '', 
                        api_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                            force_query = True, 
                            fragment = '', 
                            host = '', 
                            omit_host = True, 
                            opaque = '', 
                            path = '', 
                            raw_fragment = '', 
                            raw_path = '', 
                            raw_query = '', 
                            scheme = '', 
                            user = bgrafana-api.models.userinfo.Userinfo(), ), 
                        description = '', 
                        details = {
                            'key' : ''
                            }, 
                        entity = '', 
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = , 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        message = '', 
                        note = '', 
                        priority = '', 
                        responders = [
                            bgrafana-api.models.ops_genie_config_responder.OpsGenieConfigResponder(
                                id = '', 
                                name = '', 
                                type = '', 
                                username = '', )
                            ], 
                        send_resolved = True, 
                        source = '', 
                        tags = '', 
                        update_alerts = True, )
                    ],
                pagerduty_configs = [
                    bgrafana-api.models.pagerduty_config_configures_notifications_via_pager_duty/.PagerdutyConfig configures notifications via PagerDuty.(
                        class = '', 
                        client = '', 
                        client_url = '', 
                        component = '', 
                        description = '', 
                        details = {
                            'key' : ''
                            }, 
                        group = '', 
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', 
                                    user = bgrafana-api.models.userinfo.Userinfo(), ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                force_query = True, 
                                fragment = '', 
                                host = '', 
                                omit_host = True, 
                                opaque = '', 
                                path = '', 
                                raw_fragment = '', 
                                raw_path = '', 
                                raw_query = '', 
                                scheme = '', ), 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        images = [
                            bgrafana-api.models.pagerduty_image.PagerdutyImage(
                                alt = '', 
                                href = '', 
                                src = '', )
                            ], 
                        links = [
                            bgrafana-api.models.pagerduty_link.PagerdutyLink(
                                href = '', 
                                text = '', )
                            ], 
                        routing_key = '', 
                        routing_key_file = '', 
                        send_resolved = True, 
                        service_key = '', 
                        service_key_file = '', 
                        severity = '', 
                        source = '', 
                        url = , )
                    ],
                pushover_configs = [
                    bgrafana-api.models.pushover_config.PushoverConfig(
                        expire = '', 
                        html = True, 
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', 
                                    user = bgrafana-api.models.userinfo.Userinfo(), ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                force_query = True, 
                                fragment = '', 
                                host = '', 
                                omit_host = True, 
                                opaque = '', 
                                path = '', 
                                raw_fragment = '', 
                                raw_path = '', 
                                raw_query = '', 
                                scheme = '', ), 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        message = '', 
                        priority = '', 
                        retry = '', 
                        send_resolved = True, 
                        sound = '', 
                        title = '', 
                        token = '', 
                        token_file = '', 
                        url = '', 
                        url_title = '', 
                        user_key = '', 
                        user_key_file = '', )
                    ],
                slack_configs = [
                    bgrafana-api.models.slack_config_configures_notifications_via_slack/.SlackConfig configures notifications via Slack.(
                        actions = [
                            bgrafana-api.models.slack_action_configures_a_single_slack_action_that_is_sent_with_each_notification/.SlackAction configures a single Slack action that is sent with each notification.(
                                confirm = bgrafana-api.models.slack_confirmation_field.SlackConfirmationField(
                                    dismiss_text = '', 
                                    ok_text = '', 
                                    text = '', 
                                    title = '', ), 
                                name = '', 
                                style = '', 
                                text = '', 
                                type = '', 
                                url = '', 
                                value = '', )
                            ], 
                        api_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                            force_query = True, 
                            fragment = '', 
                            host = '', 
                            omit_host = True, 
                            opaque = '', 
                            path = '', 
                            raw_fragment = '', 
                            raw_path = '', 
                            raw_query = '', 
                            scheme = '', 
                            user = bgrafana-api.models.userinfo.Userinfo(), ), 
                        api_url_file = '', 
                        callback_id = '', 
                        channel = '', 
                        color = '', 
                        fallback = '', 
                        fields = [
                            bgrafana-api.models.slack_field_configures_a_single_slack_field_that_is_sent_with_each_notification/.SlackField configures a single Slack field that is sent with each notification.(
                                short = True, 
                                title = '', 
                                value = '', )
                            ], 
                        footer = '', 
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = , 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        icon_emoji = '', 
                        icon_url = '', 
                        image_url = '', 
                        link_names = True, 
                        mrkdwn_in = [
                            ''
                            ], 
                        pretext = '', 
                        send_resolved = True, 
                        short_fields = True, 
                        text = '', 
                        thumb_url = '', 
                        title = '', 
                        title_link = '', 
                        username = '', )
                    ],
                sns_configs = [
                    bgrafana-api.models.sns_config.SNSConfig(
                        api_url = '', 
                        attributes = {
                            'key' : ''
                            }, 
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', 
                                    user = bgrafana-api.models.userinfo.Userinfo(), ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                force_query = True, 
                                fragment = '', 
                                host = '', 
                                omit_host = True, 
                                opaque = '', 
                                path = '', 
                                raw_fragment = '', 
                                raw_path = '', 
                                raw_query = '', 
                                scheme = '', ), 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        message = '', 
                        phone_number = '', 
                        send_resolved = True, 
                        sigv4 = bgrafana-api.models.sig_v4_config.SigV4Config(
                            access_key = '', 
                            profile = '', 
                            region = '', 
                            role_arn = '', 
                            secret_key = '', ), 
                        subject = '', 
                        target_arn = '', 
                        topic_arn = '', )
                    ],
                telegram_configs = [
                    bgrafana-api.models.telegram_config_configures_notifications_via_telegram/.TelegramConfig configures notifications via Telegram.(
                        api_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                            force_query = True, 
                            fragment = '', 
                            host = '', 
                            omit_host = True, 
                            opaque = '', 
                            path = '', 
                            raw_fragment = '', 
                            raw_path = '', 
                            raw_query = '', 
                            scheme = '', 
                            user = bgrafana-api.models.userinfo.Userinfo(), ), 
                        chat = 56, 
                        disable_notifications = True, 
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = , 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        message = '', 
                        parse_mode = '', 
                        send_resolved = True, 
                        token = '', )
                    ],
                victorops_configs = [
                    bgrafana-api.models.victor_ops_config_configures_notifications_via_victor_ops/.VictorOpsConfig configures notifications via VictorOps.(
                        api_key = '', 
                        api_key_file = '', 
                        api_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                            force_query = True, 
                            fragment = '', 
                            host = '', 
                            omit_host = True, 
                            opaque = '', 
                            path = '', 
                            raw_fragment = '', 
                            raw_path = '', 
                            raw_query = '', 
                            scheme = '', 
                            user = bgrafana-api.models.userinfo.Userinfo(), ), 
                        custom_fields = {
                            'key' : ''
                            }, 
                        entity_display_name = '', 
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = , 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        message_type = '', 
                        monitoring_tool = '', 
                        routing_key = '', 
                        send_resolved = True, 
                        state_message = '', )
                    ],
                webex_configs = [
                    bgrafana-api.models.webex_config_configures_notifications_via_webex/.WebexConfig configures notifications via Webex.(
                        api_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                            force_query = True, 
                            fragment = '', 
                            host = '', 
                            omit_host = True, 
                            opaque = '', 
                            path = '', 
                            raw_fragment = '', 
                            raw_path = '', 
                            raw_query = '', 
                            scheme = '', 
                            user = bgrafana-api.models.userinfo.Userinfo(), ), 
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = , 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        message = '', 
                        room_id = '', 
                        send_resolved = True, )
                    ],
                webhook_configs = [
                    bgrafana-api.models.webhook_config_configures_notifications_via_a_generic_webhook/.WebhookConfig configures notifications via a generic webhook.(
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', 
                                    user = bgrafana-api.models.userinfo.Userinfo(), ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                force_query = True, 
                                fragment = '', 
                                host = '', 
                                omit_host = True, 
                                opaque = '', 
                                path = '', 
                                raw_fragment = '', 
                                raw_path = '', 
                                raw_query = '', 
                                scheme = '', ), 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        max_alerts = 56, 
                        send_resolved = True, 
                        url = , )
                    ],
                wechat_configs = [
                    bgrafana-api.models.wechat_config_configures_notifications_via_wechat/.WechatConfig configures notifications via Wechat.(
                        agent_id = '', 
                        api_secret = '', 
                        api_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                            force_query = True, 
                            fragment = '', 
                            host = '', 
                            omit_host = True, 
                            opaque = '', 
                            path = '', 
                            raw_fragment = '', 
                            raw_path = '', 
                            raw_query = '', 
                            scheme = '', 
                            user = bgrafana-api.models.userinfo.Userinfo(), ), 
                        corp_id = '', 
                        http_config = bgrafana-api.models.http_client_config_configures_an_http_client/.HTTPClientConfig configures an HTTP client.(
                            authorization = bgrafana-api.models.authorization_contains_http_authorization_credentials/.Authorization contains HTTP authorization credentials.(
                                credentials = '', 
                                credentials_file = '', 
                                type = '', ), 
                            basic_auth = bgrafana-api.models.basic_auth_contains_basic_http_authentication_credentials/.BasicAuth contains basic HTTP authentication credentials.(
                                password = '', 
                                password_file = '', 
                                username = '', ), 
                            bearer_token = '', 
                            bearer_token_file = '', 
                            enable_http2 = True, 
                            follow_redirects = True, 
                            oauth2 = bgrafana-api.models.o_auth2_is_the_oauth2_client_configuration/.OAuth2 is the oauth2 client configuration.(
                                tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                    ca_file = '', 
                                    cert_file = '', 
                                    insecure_skip_verify = True, 
                                    key_file = '', 
                                    max_version = 56, 
                                    min_version = 56, 
                                    server_name = '', ), 
                                client_id = '', 
                                client_secret = '', 
                                client_secret_file = '', 
                                endpoint_params = {
                                    'key' : ''
                                    }, 
                                proxy_url = bgrafana-api.models.a_url_represents_a_parsed_url_(technically,_a_uri_reference)/.A URL represents a parsed URL (technically, a URI reference).(
                                    force_query = True, 
                                    fragment = '', 
                                    host = '', 
                                    omit_host = True, 
                                    opaque = '', 
                                    path = '', 
                                    raw_fragment = '', 
                                    raw_path = '', 
                                    raw_query = '', 
                                    scheme = '', ), 
                                scopes = [
                                    ''
                                    ], 
                                token_url = '', ), 
                            proxy_connect_header = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            proxy_url = , 
                            tls_config = bgrafana-api.models.tls_config_configures_the_options_for_tls_connections/.TLSConfig configures the options for TLS connections.(
                                ca_file = '', 
                                cert_file = '', 
                                insecure_skip_verify = True, 
                                key_file = '', 
                                server_name = '', ), ), 
                        message = '', 
                        message_type = '', 
                        send_resolved = True, 
                        to_party = '', 
                        to_tag = '', 
                        to_user = '', )
                    ]
            )
        else:
            return PostableApiReceiver(
        )
        """

    def testPostableApiReceiver(self):
        """Test PostableApiReceiver"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
