# coding: utf-8

"""
    Grafana HTTP API.

    The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.

    The version of the OpenAPI document: 0.0.1
    Contact: hello@grafana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bgrafana-api.api.enterprise_api import EnterpriseApi  # noqa: E501


class TestEnterpriseApi(unittest.TestCase):
    """EnterpriseApi unit test stubs"""

    def setUp(self) -> None:
        self.api = EnterpriseApi()  # noqa: E501

    def tearDown(self) -> None:
        pass

    def test_add_permission(self) -> None:
        """Test case for add_permission

        Add permissions for a data source.  # noqa: E501
        """
        pass

    def test_add_team_group_api(self) -> None:
        """Test case for add_team_group_api

        Add External Group.  # noqa: E501
        """
        pass

    def test_add_team_role(self) -> None:
        """Test case for add_team_role

        Add team role.  # noqa: E501
        """
        pass

    def test_add_user_role(self) -> None:
        """Test case for add_user_role

        Add a user role assignment.  # noqa: E501
        """
        pass

    def test_admin_provisioning_reload_access_control(self) -> None:
        """Test case for admin_provisioning_reload_access_control

        You need to have a permission with action `provisioning:reload` with scope `provisioners:accesscontrol`.  # noqa: E501
        """
        pass

    def test_create_recording_rule(self) -> None:
        """Test case for create_recording_rule

        Create a recording rule that is then registered and started.  # noqa: E501
        """
        pass

    def test_create_recording_rule_write_target(self) -> None:
        """Test case for create_recording_rule_write_target

        Create a remote write target.  # noqa: E501
        """
        pass

    def test_create_report(self) -> None:
        """Test case for create_report

        Create a report.  # noqa: E501
        """
        pass

    def test_create_role(self) -> None:
        """Test case for create_role

        Create a new custom role.  # noqa: E501
        """
        pass

    def test_delete_license_token(self) -> None:
        """Test case for delete_license_token

        Remove license from database.  # noqa: E501
        """
        pass

    def test_delete_permissions(self) -> None:
        """Test case for delete_permissions

        Remove permission for a data source.  # noqa: E501
        """
        pass

    def test_delete_recording_rule(self) -> None:
        """Test case for delete_recording_rule

        Delete removes the rule from the registry and stops it.  # noqa: E501
        """
        pass

    def test_delete_recording_rule_write_target(self) -> None:
        """Test case for delete_recording_rule_write_target

        Delete the remote write target.  # noqa: E501
        """
        pass

    def test_delete_report(self) -> None:
        """Test case for delete_report

        Delete a report.  # noqa: E501
        """
        pass

    def test_delete_role(self) -> None:
        """Test case for delete_role

        Delete a custom role.  # noqa: E501
        """
        pass

    def test_disable_permissions(self) -> None:
        """Test case for disable_permissions

        Disable permissions for a data source.  # noqa: E501
        """
        pass

    def test_enable_permissions(self) -> None:
        """Test case for enable_permissions

        Enable permissions for a data source.  # noqa: E501
        """
        pass

    def test_get_access_control_status(self) -> None:
        """Test case for get_access_control_status

        Get status.  # noqa: E501
        """
        pass

    def test_get_all_permissions(self) -> None:
        """Test case for get_all_permissions

        Get permissions for a data source.  # noqa: E501
        """
        pass

    def test_get_custom_permissions_csv(self) -> None:
        """Test case for get_custom_permissions_csv

        Get custom permissions report in CSV format.  # noqa: E501
        """
        pass

    def test_get_custom_permissions_report(self) -> None:
        """Test case for get_custom_permissions_report

        Get custom permissions report.  # noqa: E501
        """
        pass

    def test_get_license_token(self) -> None:
        """Test case for get_license_token

        Get license token.  # noqa: E501
        """
        pass

    def test_get_metadata(self) -> None:
        """Test case for get_metadata

        It exposes the SP (Grafana's) metadata for the IdP's consumption.  # noqa: E501
        """
        pass

    def test_get_recording_rule_write_target(self) -> None:
        """Test case for get_recording_rule_write_target

        Return the prometheus remote write target.  # noqa: E501
        """
        pass

    def test_get_report(self) -> None:
        """Test case for get_report

        Get a report.  # noqa: E501
        """
        pass

    def test_get_report_settings(self) -> None:
        """Test case for get_report_settings

        Get settings.  # noqa: E501
        """
        pass

    def test_get_reports(self) -> None:
        """Test case for get_reports

        List reports.  # noqa: E501
        """
        pass

    def test_get_role(self) -> None:
        """Test case for get_role

        Get a role.  # noqa: E501
        """
        pass

    def test_get_role_assignments(self) -> None:
        """Test case for get_role_assignments

        Get role assignments.  # noqa: E501
        """
        pass

    def test_get_saml_logout(self) -> None:
        """Test case for get_saml_logout

        GetLogout initiates single logout process.  # noqa: E501
        """
        pass

    def test_get_slo(self) -> None:
        """Test case for get_slo

        It performs Single Logout (SLO) callback.  # noqa: E501
        """
        pass

    def test_get_status(self) -> None:
        """Test case for get_status

        Check license availability.  # noqa: E501
        """
        pass

    def test_get_team_groups_api(self) -> None:
        """Test case for get_team_groups_api

        Get External Groups.  # noqa: E501
        """
        pass

    def test_list_recording_rules(self) -> None:
        """Test case for list_recording_rules

        Lists all rules in the database: active or deleted.  # noqa: E501
        """
        pass

    def test_list_roles(self) -> None:
        """Test case for list_roles

        Get all roles.  # noqa: E501
        """
        pass

    def test_list_team_roles(self) -> None:
        """Test case for list_team_roles

        Get team roles.  # noqa: E501
        """
        pass

    def test_list_user_roles(self) -> None:
        """Test case for list_user_roles

        List roles assigned to a user.  # noqa: E501
        """
        pass

    def test_post_acs(self) -> None:
        """Test case for post_acs

        It performs assertion Consumer Service (ACS).  # noqa: E501
        """
        pass

    def test_post_license_token(self) -> None:
        """Test case for post_license_token

        Create license token.  # noqa: E501
        """
        pass

    def test_post_renew_license_token(self) -> None:
        """Test case for post_renew_license_token

        Manually force license refresh.  # noqa: E501
        """
        pass

    def test_post_slo(self) -> None:
        """Test case for post_slo

        It performs Single Logout (SLO) callback.  # noqa: E501
        """
        pass

    def test_refresh_license_stats(self) -> None:
        """Test case for refresh_license_stats

        Refresh license stats.  # noqa: E501
        """
        pass

    def test_remove_team_group_api(self) -> None:
        """Test case for remove_team_group_api

        Remove External Group.  # noqa: E501
        """
        pass

    def test_remove_team_role(self) -> None:
        """Test case for remove_team_role

        Remove team role.  # noqa: E501
        """
        pass

    def test_remove_user_role(self) -> None:
        """Test case for remove_user_role

        Remove a user role assignment.  # noqa: E501
        """
        pass

    def test_render_report_pdf(self) -> None:
        """Test case for render_report_pdf

        Render report for dashboard.  # noqa: E501
        """
        pass

    def test_render_report_pdfs(self) -> None:
        """Test case for render_report_pdfs

        Render report for multiple dashboards.  # noqa: E501
        """
        pass

    def test_save_report_settings(self) -> None:
        """Test case for save_report_settings

        Save settings.  # noqa: E501
        """
        pass

    def test_search_result(self) -> None:
        """Test case for search_result

        Debug permissions.  # noqa: E501
        """
        pass

    def test_send_report(self) -> None:
        """Test case for send_report

        Send a report.  # noqa: E501
        """
        pass

    def test_send_test_email(self) -> None:
        """Test case for send_test_email

        Send test report via email.  # noqa: E501
        """
        pass

    def test_set_role_assignments(self) -> None:
        """Test case for set_role_assignments

        Set role assignments.  # noqa: E501
        """
        pass

    def test_set_team_roles(self) -> None:
        """Test case for set_team_roles

        Update team role.  # noqa: E501
        """
        pass

    def test_set_user_roles(self) -> None:
        """Test case for set_user_roles

        Set user role assignments.  # noqa: E501
        """
        pass

    def test_test_create_recording_rule(self) -> None:
        """Test case for test_create_recording_rule

        Test a recording rule.  # noqa: E501
        """
        pass

    def test_update_recording_rule(self) -> None:
        """Test case for update_recording_rule

        Update the active status of a rule.  # noqa: E501
        """
        pass

    def test_update_report(self) -> None:
        """Test case for update_report

        Update a report.  # noqa: E501
        """
        pass

    def test_update_role(self) -> None:
        """Test case for update_role

        Update a custom role.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
