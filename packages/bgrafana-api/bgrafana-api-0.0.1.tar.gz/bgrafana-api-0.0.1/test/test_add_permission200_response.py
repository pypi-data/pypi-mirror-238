# coding: utf-8

"""
    Grafana HTTP API.

    The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.

    The version of the OpenAPI document: 0.0.1
    Contact: hello@grafana.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from bgrafana-api.models.add_permission200_response import AddPermission200Response  # noqa: E501

class TestAddPermission200Response(unittest.TestCase):
    """AddPermission200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddPermission200Response:
        """Test AddPermission200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddPermission200Response`
        """
        model = AddPermission200Response()  # noqa: E501
        if include_optional:
            return AddPermission200Response(
                message = '',
                permission_id = 56
            )
        else:
            return AddPermission200Response(
        )
        """

    def testAddPermission200Response(self):
        """Test AddPermission200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
