Metadata-Version: 2.1
Name: flask-bootframe
Version: 1.0
Summary:  a flask boot framework both Win and Mac 
Home-page: https://github.com/ababbabbb/programme/tree/master/topics/backend/netapis/netapi_flask/flask_boot
Author: bichuantao
Author-email: 17826066203@163.com
License: MIT
Keywords: python,flask,boot,framework
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown


# folder_explorer

#### 介绍
管理节点捞图服务

#### 软件架构
本项目以flask为http网络服务支持框架，并在其基础上借鉴spring及springboot的后端服务项目开发管理理念，以继承的方式实现对程序的编码约定及编码限制，
并在Common文件夹中实现约定继承及装配机制(因此在后续改动过程中无需过度关注，仅需遵照mvc既有开发范式进行增改即可)，mvc为项目功能实现主体

#### 增改说明

1.  本项目无需编码人员过度关注项目本身各项机制实现，仅需遵照约定进行编码开发
2.  本项目功能实现主体为mvc文件夹中的源码，主要分为config(在应用运行之前加载各项配置)、servlet(在请求从接收到处理、处理到响应两个过程中对数据进行必要处理，起到拦截器/中间件的作用)、
    router(本项目底层http服务支持选择的是flask框架，因此需要单独针对路由注册进行编码)、controller(真正意义上请求开始处理的地方，可以在此处接收请求并进行参数校验等工作)、service(根据dao层所提供的数据操作接口进行业务逻辑实现)、dao(负责根据当前程序接入的数据源对业务提供必要的增删改查接口)、
    entity(包含各类层与层之间用于数据封装及数据传输的实体类，数据库的模型类作为数据实体<pojo/do>也在其中)、utils(为项目提供各种必要的demo工具)
3.  部分层有指定的基类需要继承，并务必要在其中实现指定的抽象接口，同时，部分接口内的实现有特殊要求
4.  本项目旨在规范flask微服务开发的编码范式，通过对请求处理各流程的约定，尽可能精简在各层所需的代码量，同时节约过去自由开发时对各层局部范围内代码运行机制进行设计的时间及精力

#### 参与贡献

1.  Fork 本仓库
2.  新建 Feat_xxx 分支
3.  提交代码
4.  新建 Pull Request
