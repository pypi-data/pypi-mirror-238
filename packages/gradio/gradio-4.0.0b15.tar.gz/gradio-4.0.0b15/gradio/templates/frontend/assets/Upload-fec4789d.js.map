{"version":3,"file":"Upload-fec4789d.js","sources":["../../../../js/upload/src/Upload.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher, tick, getContext } from \"svelte\";\n\timport type { FileData } from \"@gradio/client\";\n\timport { upload_files, upload, prepare_files } from \"@gradio/client\";\n\timport { _ } from \"svelte-i18n\";\n\n\texport let filetype: string | null = null;\n\texport let dragging = false;\n\texport let boundedheight = true;\n\texport let center = true;\n\texport let flex = true;\n\texport let file_count = \"single\";\n\texport let disable_click = false;\n\texport let root: string;\n\texport let hidden = false;\n\n\t// Needed for wasm support\n\tconst upload_fn = getContext<typeof upload_files>(\"upload_files\");\n\n\tlet hidden_upload: HTMLInputElement;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction updateDragging(): void {\n\t\tdragging = !dragging;\n\t}\n\n\texport function open_file_upload(): void {\n\t\tif (disable_click) return;\n\t\thidden_upload.value = \"\";\n\t\thidden_upload.click();\n\t}\n\n\tasync function handle_upload(\n\t\tfile_data: FileData[]\n\t): Promise<(FileData | null)[]> {\n\t\tawait tick();\n\t\tconst _file_data = await upload(file_data, root, upload_fn);\n\t\tdispatch(\"load\", file_count === \"single\" ? _file_data?.[0] : _file_data);\n\t\treturn _file_data || [];\n\t}\n\n\texport async function load_files(\n\t\tfiles: File[] | Blob[]\n\t): Promise<(FileData | null)[] | void> {\n\t\tif (!files.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet _files: File[] = files.map((f) => new File([f], f.name));\n\n\t\tlet file_data = await prepare_files(_files);\n\t\treturn await handle_upload(file_data);\n\t}\n\n\tasync function load_files_from_upload(e: Event): Promise<void> {\n\t\tconst target = e.target as HTMLInputElement;\n\t\tif (!target.files) return;\n\t\tawait load_files(Array.from(target.files));\n\t}\n\n\tfunction is_valid_mimetype(\n\t\tfile_accept: string | null,\n\t\tmime_type: string\n\t): boolean {\n\t\tif (!file_accept) {\n\t\t\treturn true;\n\t\t}\n\t\tif (file_accept === \"*\") {\n\t\t\treturn true;\n\t\t}\n\t\tif (file_accept.endsWith(\"/*\")) {\n\t\t\treturn mime_type.startsWith(file_accept.slice(0, -1));\n\t\t}\n\t\treturn file_accept === mime_type;\n\t}\n\n\tasync function loadFilesFromDrop(e: DragEvent): Promise<void> {\n\t\tdragging = false;\n\t\tif (!e.dataTransfer?.files) return;\n\n\t\tconst files_to_load = Array.from(e.dataTransfer.files).filter((f) => {\n\t\t\tif (is_valid_mimetype(filetype, f.type)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tdispatch(\"error\", `Invalid file type only ${filetype} allowed.`);\n\t\t\treturn false;\n\t\t});\n\n\t\tawait load_files(files_to_load);\n\t}\n</script>\n\n<button\n\tclass:hidden\n\tclass:center\n\tclass:boundedheight\n\tclass:flex\n\ton:drag|preventDefault|stopPropagation\n\ton:dragstart|preventDefault|stopPropagation\n\ton:dragend|preventDefault|stopPropagation\n\ton:dragover|preventDefault|stopPropagation\n\ton:dragenter|preventDefault|stopPropagation\n\ton:dragleave|preventDefault|stopPropagation\n\ton:drop|preventDefault|stopPropagation\n\ton:click={open_file_upload}\n\ton:drop={loadFilesFromDrop}\n\ton:dragenter={updateDragging}\n\ton:dragleave={updateDragging}\n>\n\t<slot />\n\t<input\n\t\ttype=\"file\"\n\t\tbind:this={hidden_upload}\n\t\ton:change={load_files_from_upload}\n\t\taccept={filetype}\n\t\tmultiple={file_count === \"multiple\" || undefined}\n\t\twebkitdirectory={file_count === \"directory\" || undefined}\n\t\tmozdirectory={file_count === \"directory\" || undefined}\n\t/>\n</button>\n\n<style>\n\tbutton {\n\t\tcursor: pointer;\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t}\n\n\t.hidden {\n\t\tdisplay: none;\n\t\theight: 0;\n\t\tposition: absolute;\n\t}\n\n\t.center {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\t.flex {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\tinput {\n\t\tdisplay: none;\n\t}\n</style>\n"],"names":["createEventDispatcher","tick","getContext","ctx","insert","target","button","anchor","append","input","is_valid_mimetype","file_accept","mime_type","filetype","$$props","dragging","boundedheight","center","flex","file_count","disable_click","root","hidden","upload_fn","hidden_upload","dispatch","updateDragging","$$invalidate","open_file_upload","handle_upload","file_data","_file_data","upload","load_files","files","_files","f","prepare_files","load_files_from_upload","loadFilesFromDrop","files_to_load","$$value"],"mappings":"4eACU,CAAA,sBAAAA,GAAuB,KAAAC,GAAM,WAAAC,EAAA,SAA0B,gMAkHvDC,EAAQ,CAAA,CAAA,eACNA,EAAU,CAAA,IAAK,YAAc,+BACtBA,EAAU,CAAA,IAAK,aAAe,MAAS,uBAC1CA,EAAU,CAAA,IAAK,aAAe,MAAS,uJAzBvDC,EA2BQC,EAAAC,EAAAC,CAAA,wBATPC,EAQCF,EAAAG,CAAA,oCALWN,EAAsB,CAAA,CAAA,4MATxBA,EAAgB,CAAA,CAAA,aACjBA,EAAiB,EAAA,CAAA,kBACZA,EAAc,CAAA,CAAA,kBACdA,EAAc,CAAA,CAAA,oHAOnBA,EAAQ,CAAA,CAAA,oBACNA,EAAU,CAAA,IAAK,YAAc,2CACtBA,EAAU,CAAA,IAAK,aAAe,qDACjCA,EAAU,CAAA,IAAK,aAAe,kQAzDpCO,GACRC,EACAC,EAAiB,CAKb,OAHCD,GAGDA,IAAgB,IACZ,GAEJA,EAAY,SAAS,IAAI,EACrBC,EAAU,WAAWD,EAAY,MAAM,EAAC,EAAI,CAAA,EAE7CA,IAAgBC,mDApEb,CAAA,SAAAC,EAA0B,IAAI,EAAAC,EAC9B,CAAA,SAAAC,EAAW,EAAK,EAAAD,EAChB,CAAA,cAAAE,EAAgB,EAAI,EAAAF,EACpB,CAAA,OAAAG,EAAS,EAAI,EAAAH,EACb,CAAA,KAAAI,EAAO,EAAI,EAAAJ,EACX,CAAA,WAAAK,EAAa,QAAQ,EAAAL,EACrB,CAAA,cAAAM,EAAgB,EAAK,EAAAN,GACrB,KAAAO,CAAY,EAAAP,EACZ,CAAA,OAAAQ,EAAS,EAAK,EAAAR,QAGnBS,EAAYrB,GAAgC,cAAc,MAE5DsB,EAEE,MAAAC,EAAWzB,cAER0B,GAAc,CACtBC,EAAA,GAAAZ,GAAYA,CAAQ,WAGLa,GAAgB,CAC3BR,QACJI,EAAc,MAAQ,GAAEA,CAAA,EACxBA,EAAc,MAAK,GAGL,eAAAK,EACdC,EAAqB,OAEf7B,GAAI,EACJ,MAAA8B,QAAmBC,EAAOF,EAAWT,EAAME,CAAS,EAC1D,OAAAE,EAAS,OAAQN,IAAe,SAAWY,IAAa,CAAC,EAAIA,CAAU,EAChEA,GAAU,CAAA,EAGI,eAAAE,EACrBC,EAAsB,CAEjB,GAAA,CAAAA,EAAM,cAIP,IAAAC,EAAiBD,EAAM,IAAKE,GAAU,IAAA,KAAM,CAAAA,CAAC,EAAGA,EAAE,IAAI,CAAA,EAEtDN,EAAS,MAASO,EAAcF,CAAM,EAC7B,OAAA,MAAAN,EAAcC,CAAS,EAGtB,eAAAQ,EAAuB,EAAQ,OACvCjC,EAAS,EAAE,OACZA,EAAO,OACN,MAAA4B,EAAW,MAAM,KAAK5B,EAAO,KAAK,CAAA,EAmB1B,eAAAkC,EAAkB,EAAY,IAC5CZ,EAAA,GAAAZ,EAAW,EAAK,GACX,EAAE,cAAc,MAAK,OAEpB,MAAAyB,EAAgB,MAAM,KAAK,EAAE,aAAa,KAAK,EAAE,OAAQJ,GAC1D1B,GAAkBG,EAAUuB,EAAE,IAAI,EAC9B,IAERX,EAAS,QAAO,0BAA4BZ,CAAQ,WAAA,EAC7C,KAGF,MAAAoB,EAAWO,CAAa,oQAwBnBhB,EAAaiB"}