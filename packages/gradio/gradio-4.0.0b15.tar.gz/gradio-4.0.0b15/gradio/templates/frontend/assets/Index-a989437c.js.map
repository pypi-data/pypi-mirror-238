{"version":3,"file":"Index-a989437c.js","sources":["../../../../js/checkboxgroup/Index.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport type { Gradio, SelectData } from \"@gradio/utils\";\n\timport { Block, BlockTitle } from \"@gradio/atoms\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\timport { afterUpdate } from \"svelte\";\n\n\texport let gradio: Gradio<{\n\t\tchange: never;\n\t\tselect: SelectData;\n\t\tinput: never;\n\t}>;\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: (string | number)[] = [];\n\texport let value_is_output = false;\n\texport let choices: [string, number][];\n\texport let container = true;\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let label = gradio.i18n(\"checkbox.checkbox_group\");\n\texport let info: string | undefined = undefined;\n\texport let show_label: boolean;\n\n\texport let loading_status: LoadingStatus;\n\texport let interactive: boolean;\n\n\tlet old_value: (string | number)[] = value.slice();\n\n\tfunction toggleChoice(choice: string | number): void {\n\t\t// update the old\n\t\tif (old_value.includes(choice)) {\n\t\t\told_value.splice(old_value.indexOf(choice), 1);\n\t\t} else {\n\t\t\told_value.push(choice);\n\t\t}\n\t\told_value = [...old_value];\n\t}\n\n\tfunction handle_change(): void {\n\t\tgradio.dispatch(\"change\");\n\t\tif (!value_is_output) {\n\t\t\tgradio.dispatch(\"input\");\n\t\t}\n\t}\n\n\tafterUpdate(() => {\n\t\tvalue_is_output = false;\n\t});\n\n\t$: disabled = !interactive;\n\n\t// When old_value changes, update value and call handle_change()\n\t// See the docs for an explanation: https://svelte.dev/docs/svelte-components#script-3-$-marks-a-statement-as-reactive\n\t$: (value = [...old_value]), handle_change();\n</script>\n\n<Block\n\t{visible}\n\t{elem_id}\n\t{elem_classes}\n\ttype=\"fieldset\"\n\t{container}\n\t{scale}\n\t{min_width}\n>\n\t<StatusTracker\n\t\tautoscroll={gradio.autoscroll}\n\t\ti18n={gradio.i18n}\n\t\t{...loading_status}\n\t/>\n\t<BlockTitle {show_label} {info}>{label}</BlockTitle>\n\n\t<div class=\"wrap\" data-testid=\"checkbox-group\">\n\t\t{#each choices as choice, i}\n\t\t\t<label class:disabled class:selected={value.includes(choice[1])}>\n\t\t\t\t<input\n\t\t\t\t\t{disabled}\n\t\t\t\t\ton:change={() => toggleChoice(choice[1])}\n\t\t\t\t\ton:input={(evt) =>\n\t\t\t\t\t\tgradio.dispatch(\"select\", {\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tvalue: choice[1],\n\t\t\t\t\t\t\tselected: evt.currentTarget.checked\n\t\t\t\t\t\t})}\n\t\t\t\t\ton:keydown={(event) => {\n\t\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\t\ttoggleChoice(choice[1]);\n\t\t\t\t\t\t\tgradio.dispatch(\"select\", {\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tvalue: choice[1],\n\t\t\t\t\t\t\t\tselected: !value.includes(choice[1])\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tchecked={value.includes(choice[1])}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tname={choice[1]?.toString()}\n\t\t\t\t\ttitle={choice[1]?.toString()}\n\t\t\t\t/>\n\t\t\t\t<span class=\"ml-2\">{choice[0]}</span>\n\t\t\t</label>\n\t\t{/each}\n\t</div>\n</Block>\n\n<style>\n\t.wrap {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: var(--checkbox-label-gap);\n\t}\n\tlabel {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttransition: var(--button-transition);\n\t\tcursor: pointer;\n\t\tbox-shadow: var(--checkbox-label-shadow);\n\t\tborder: var(--checkbox-label-border-width) solid\n\t\t\tvar(--checkbox-label-border-color);\n\t\tborder-radius: var(--button-small-radius);\n\t\tbackground: var(--checkbox-label-background-fill);\n\t\tpadding: var(--checkbox-label-padding);\n\t\tcolor: var(--checkbox-label-text-color);\n\t\tfont-weight: var(--checkbox-label-text-weight);\n\t\tfont-size: var(--checkbox-label-text-size);\n\t\tline-height: var(--line-md);\n\t}\n\n\tlabel:hover {\n\t\tbackground: var(--checkbox-label-background-fill-hover);\n\t}\n\tlabel:focus {\n\t\tbackground: var(--checkbox-label-background-fill-focus);\n\t}\n\tlabel.selected {\n\t\tbackground: var(--checkbox-label-background-fill-selected);\n\t\tcolor: var(--checkbox-label-text-color-selected);\n\t}\n\n\tlabel > * + * {\n\t\tmargin-left: var(--size-2);\n\t}\n\n\tinput {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\tbox-shadow: var(--checkbox-shadow);\n\t\tborder: var(--checkbox-border-width) solid var(--checkbox-border-color);\n\t\tborder-radius: var(--checkbox-border-radius);\n\t\tbackground-color: var(--checkbox-background-color);\n\t\tline-height: var(--line-sm);\n\t}\n\n\tinput:checked,\n\tinput:checked:hover,\n\tinput:checked:focus {\n\t\tborder-color: var(--checkbox-border-color-selected);\n\t\tbackground-image: var(--checkbox-check);\n\t\tbackground-color: var(--checkbox-background-color-selected);\n\t}\n\n\tinput:checked:focus {\n\t\tborder-color: var(--checkbox-border-color-focus);\n\t\tbackground-image: var(--checkbox-check);\n\t\tbackground-color: var(--checkbox-background-color-selected);\n\t}\n\n\tinput:hover {\n\t\tborder-color: var(--checkbox-border-color-hover);\n\t\tbackground-color: var(--checkbox-background-color-hover);\n\t}\n\n\tinput:not(:checked):focus {\n\t\tborder-color: var(--checkbox-border-color-focus);\n\t}\n\n\tinput[disabled],\n\t.disabled {\n\t\tcursor: not-allowed;\n\t}\n</style>\n"],"names":["afterUpdate","ctx","t1_value","input","input_checked_value","toggle_class","label_1","insert","target","anchor","append","span","dirty","set_data","t1","i","div","gradio","$$props","elem_id","elem_classes","visible","value","value_is_output","choices","container","scale","min_width","label","info","show_label","loading_status","interactive","old_value","toggleChoice","choice","$$invalidate","handle_change","input_handler","evt","event","disabled"],"mappings":"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"}