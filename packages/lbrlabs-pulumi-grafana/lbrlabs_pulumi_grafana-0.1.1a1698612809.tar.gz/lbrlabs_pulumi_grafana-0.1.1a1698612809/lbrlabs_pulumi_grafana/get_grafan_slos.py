# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetGrafanSlosResult',
    'AwaitableGetGrafanSlosResult',
    'get_grafan_slos',
]

@pulumi.output_type
class GetGrafanSlosResult:
    """
    A collection of values returned by getGrafanSlos.
    """
    def __init__(__self__, id=None, slos=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if slos and not isinstance(slos, list):
            raise TypeError("Expected argument 'slos' to be a list")
        pulumi.set(__self__, "slos", slos)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def slos(self) -> Sequence['outputs.GetGrafanSlosSloResult']:
        """
        Returns a list of all SLOs"
        """
        return pulumi.get(self, "slos")


class AwaitableGetGrafanSlosResult(GetGrafanSlosResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGrafanSlosResult(
            id=self.id,
            slos=self.slos)


def get_grafan_slos(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGrafanSlosResult:
    """
    Datasource for retrieving all SLOs.

    * [Official documentation](https://grafana.com/docs/grafana-cloud/slo/)
    * [API documentation](https://grafana.com/docs/grafana-cloud/slo/api/)
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('grafana:index/getGrafanSlos:getGrafanSlos', __args__, opts=opts, typ=GetGrafanSlosResult).value

    return AwaitableGetGrafanSlosResult(
        id=__ret__.id,
        slos=__ret__.slos)
