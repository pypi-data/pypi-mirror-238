Metadata-Version: 2.1
Name: requests_resilient
Version: 0.2.0
Summary: A thin wrapper for requests adding resilience to network failures
Author-email: Leonardo Benitez <lsbenitezpereira@gmail.com>
License: MIT License
        
        Copyright (c) 2022 LeonardoSanBenitez
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: repository, https://github.com/LeonardoSanBenitez/requests_resilient
Project-URL: documentation, https://github.com/LeonardoSanBenitez/requests_resilient
Keywords: requests,resilience
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.31.0
Provides-Extra: build
Requires-Dist: build; extra == "build"
Requires-Dist: twine; extra == "build"
Provides-Extra: dev
Requires-Dist: python_dotenv; extra == "dev"

# Requests Resilient

Wrapper around the `requests` python library to make it resilient to network failures

# Getting started
## Synchronous requests
Example:
```python
r = requests_resilient.get('https://google.com')
print(r.status_code)  # int, 200
print(r.text)  # str
```

## Assynchronous requests
Example:
```python
r = await requests_resilient.async_get('https://google.com')
print(r.status_code)  # int, 200
print(r.text)  # str
```
