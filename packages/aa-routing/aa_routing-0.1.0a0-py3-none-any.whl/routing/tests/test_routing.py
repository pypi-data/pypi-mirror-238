from django.test import TestCase

from routing.routing import route_length, route_path, systems_range


class TestModels(TestCase):
    def test_route_path(self):

        # Jita to b170
        self.assertEqual(route_path(30000142, 30004590, mode="prefer_shortest", static_cache=True), [30000142, 30000138, 30001379, 30001376, 30002813, 30045346, 30045345, 30045353, 30045338, 30045344, 30003837, 30003836, 30003841, 30004046, 30004044, 30004043, 30004042, 30004040, 30004589, 30004586, 30004584, 30004554, 30004552, 30004553, 30004555, 30004557, 30004573, 30004574, 30004575, 30004578, 30004581, 30004583, 30004590])
        self.assertEqual(route_length(30000142, 30004590, mode="prefer_shortest", static_cache=True), 32)

        self.assertEqual(route_path(30000142, 30004590, mode="prefer_safest", static_cache=True), [30000142, 30000144, 30000139, 30002791, 30002805, 30002803, 30002768, 30002765, 30002764, 30002762, 30004974, 30004973, 30004975, 30003830, 30003833, 30003827, 30003829, 30003836, 30003841, 30004046, 30004044, 30004043, 30004042, 30004040, 30004589, 30004586, 30004584, 30004554, 30004552, 30004553, 30004555, 30004557, 30004573, 30004574, 30004575, 30004578, 30004581, 30004583, 30004590])
        self.assertEqual(route_length(30000142, 30004590, mode="prefer_safest", static_cache=True), 38)

        self.assertEqual(route_path(30000142, 30004590, mode="prefer_less_safe", static_cache=True), [30000142, 30000138, 30001379, 30001376, 30002813, 30045346, 30045345, 30045353, 30045338, 30045344, 30003837, 30003836, 30003841, 30004046, 30004044, 30004043, 30004042, 30004040, 30004589, 30004586, 30004584, 30004554, 30004552, 30004553, 30004555, 30004557, 30004573, 30004574, 30004575, 30004578, 30004581, 30004583, 30004590])
        self.assertEqual(route_length(30000142, 30004590, mode="prefer_less_safe", static_cache=True), 32)

        # Jita to Amarr
        self.assertEqual(route_path(30000142, 30002187, mode="prefer_shortest", static_cache=True), [30000142, 30000138, 30000132, 30000134, 30005196, 30005192, 30004083, 30004078, 30004079, 30004080, 30002282, 30002187])
        self.assertEqual(route_length(30000142, 30002187, mode="prefer_shortest", static_cache=True), 11)

        self.assertEqual(route_path(30000142, 30002187, mode="prefer_safest", static_cache=True), [30000142, 30000144, 30000139, 30002791, 30002805, 30002803, 30002768, 30002765, 30002764, 30002761, 30004972, 30004970, 30002633, 30002634, 30002641, 30002681, 30002682, 30002048, 30002049, 30002053, 30002543, 30002544, 30002568, 30002529, 30002526, 30002510, 30002509, 30000004, 30000005, 30000002, 30002973, 30002969, 30002974, 30002972, 30002971, 30002970, 30002963, 30002964, 30002991, 30002994, 30003545, 30003548, 30003525, 30003523, 30003522, 30002187])
        self.assertEqual(route_length(30000142, 30002187, mode="prefer_safest", static_cache=True), 45)

        self.assertEqual(route_path(30000142, 30002187, mode="prefer_less_safe", static_cache=True), [30000142, 30000138, 30001379, 30001376, 30002813, 30002809, 30002807, 30004985, 30004980, 30004979, 30005000, 30004999, 30005008, 30004990, 30004991, 30004992, 30002728, 30002726, 30002725, 30002727, 30002729, 30002730, 30003478, 30003479, 30003480, 30004136, 30004121, 30004119, 30004117, 30004118, 30004120, 30005241, 30005239, 30005237, 30005236, 30005031, 30005030, 30005035, 30005036, 30005038, 30002187])
        self.assertEqual(route_length(30000142, 30002187, mode="prefer_less_safe", static_cache=True), 40)

        self.assertEqual(systems_range(30000142, 1, static_cache=True), [30000138, 30000140, 30000143, 30000144, 30000145, 30001363, 30002780])
