Metadata-Version: 2.1
Name: mad_notifications
Version: 2.0.0
Summary: A Django app to send push notifications to to users.
Home-page: https://www.madithouse.com/
Author: Haseeb Ur Rehman
Author-email: code@madithouse.com
License: Other/Proprietary License
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENCE.md
Requires-Dist: django
Requires-Dist: djangorestframework
Requires-Dist: firebase-admin
Requires-Dist: google-api-core
Requires-Dist: google-auth
Requires-Dist: google-auth-httplib2
Requires-Dist: google-api-python-client
Requires-Dist: google-cloud-firestore
Requires-Dist: googleapis-common-protos
Requires-Dist: django-filter
Requires-Dist: celery
Requires-Dist: django-celery-beat
Requires-Dist: twilio

# Mad Notifications

Mad Notifications app for django to send notifications to the user

## Quick start

1. Add "mad_notifications" to your INSTALLED_APPS setting like this:

    ```python
    INSTALLED_APPS = [
        ...
        'mad_notifications',
    ]
    ```

2. Include the notifications URLconf in your project urls.py like this:

    ```python
    path('notifications/', include('mad_notifications.api.urls')),
    ```

3. Run `python manage.py migrate` to create the notifications models.

## Usage

### Shorthand method

```python
from mad_notifications.shorthand import newNotification
# create and send
return newNotification(
    user, # django user object
    title, # string
    content, # string
    template_slug = None, # slug from mad_notification.EmailTemplate
    data = {}, # dict
    actions = {} # dict
)
```

### Notification Class

```python
from mad_notifications.notification import Notification
# create a notification
notification = Notification(
    user = user,
    title = "New Order",
    content = "You have a new order!",
    data = {
        'order': order_data,
    },
    actions = {
        'click_action': "ORDER_SCREEN"
    },
    template = email_template, # mad_notification.EmailTemplate Object
)
# send the notification
notification.notify()
```

## Overriding default

```python
MAD_NOTIFICATIONS = {
    "FIREBASE_MOBILE_PUSH_NOTIFICATION_CLASS": "mad_notifications.senders.firebase.FirebaseMobilePushNotification",
    "EMAIL_NOTIFICATION_CLASS": "mad_notifications.senders.email.EmailNotification",
}
```

## Developer Guide

### Setting up a new provider

Create logic in `~/senders/PROVIDER.py` and call via tasks in `~/notify/PROVIDER.py`
